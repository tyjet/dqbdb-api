# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
# To check docker images:
#   https://circleci.com/docs/2.0/circleci-images/
#   https://hub.docker.com/r/circleci/ruby/tags/ - more up to date

version: 2
jobs:
  build:
    docker:
      - image: docker:stable-git
    environment:
      - DOCKER_REPOSITORY: 'dynaer/dqbdb-api'
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Docker Login
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Docker Build
          command: docker build . -t dynaer/dqbdb-api:test-$CIRCLE_SHA1 --build-arg GEM_GROUPS="development staging production "
      - run:
          name: Docker Push
          command: docker push dynaer/dqbdb-api:test-$CIRCLE_SHA1
  test:
    working_directory: ~/app
    docker:
      - image: dynaer/dqbdb-api:test-$CIRCLE_SHA1
        environment:
          RAILS_ENV: test
          RACK_ENV: test
          DATABASE_URL: postgres://test_user@localhost:5432/dqbdb_api_test
      - image: circleci/postgres:10.3
        environment:
          POSTGRES_USER: test_user
          POSTGRES_DB: dqbdb_api_test
    steps:
      - run:
          name: Test
          command: rails test

  brakeman:
    working_directory: ~/app
    docker:
      - image: dynaer/dqbdb-api:test-$CIRCLE_SHA1
    steps:
      - run:
          name: Brakeman
          command: |
            pwd
            ls
            cd ..
            pwd
            ls
            cd ..
            ls
            cd app
            ls
            brakeman -q -o brakeman.html
      - store_artifacts:
          path: brakeman.html

  rubocop:
    working_directory: ~/app
    docker:
      - image: dynaer/dqbdb-api:test-$CIRCLE_SHA1
    steps:
      - run:
          name: Rubocop
          command: rubocop -o rubocop.html
      - store_artifacts:
          path: rubocop.html

  gemsurance:
    working_directory: ~/app
    docker:
      - image: dynaer/dqbdb-api:test-$CIRCLE_SHA1
    steps:
      - run:
          name: Gemsurance
          command: gemsurance
      - store_artifacts:
          path: gemsurance_report.html

workflows:
  version: 2
  build-test-and-lint:
    jobs:
      - build:
          context: org-global
      - test:
          context: org-global
          requires:
            - build
      - brakeman:
          context: org-global
          requires:
            - build
      - rubocop:
          context: org-global
          requires:
            - build
      - gemsurance:
          context: org-global
          requires:
            - build
